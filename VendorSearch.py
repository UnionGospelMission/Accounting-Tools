#!/usr/bin/env python
# -*- coding: ISO-8859-15 -*-
#
# generated by wxGlade 0.6.8 (standalone edition) on Tue Nov 12 09:03:22 2013
#

import wx,wx.grid,json,decimal,pyodbc

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade

class Globals():
	def __init__(self):
		pass
Globals.settings={}
Globals.password=''
Globals.con=''
class DatabaseConnection(wx.Dialog):
	def __init__(self, *args, **kwds):
		kwds["style"] = wx.DEFAULT_DIALOG_STYLE
		wx.Dialog.__init__(self, *args, **kwds)
		self.label_1 = wx.StaticText(self, wx.ID_ANY, "Server")
		self.SERVER = wx.TextCtrl(self, wx.ID_ANY, "")
		self.label_2 = wx.StaticText(self, wx.ID_ANY, "Database")
		self.DATABASE = wx.TextCtrl(self, wx.ID_ANY, "")
		self.label_3 = wx.StaticText(self, wx.ID_ANY, "Username")
		self.USERNAME = wx.TextCtrl(self, wx.ID_ANY, "")
		self.label_4 = wx.StaticText(self, wx.ID_ANY, "Password")
		self.PASSWORD = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PASSWORD)
		self.button_1 = wx.Button(self, wx.ID_ANY, "Connect")

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_TEXT, self.saveDatabase, self.SERVER)
		self.Bind(wx.EVT_TEXT, self.saveDatabase, self.DATABASE)
		self.Bind(wx.EVT_TEXT, self.saveDatabase, self.USERNAME)
		self.Bind(wx.EVT_TEXT, self.saveDatabase, self.PASSWORD)
		self.Bind(wx.EVT_BUTTON, self.onConnect, self.button_1)
		self.Bind(wx.EVT_CLOSE,self.onClose)
		self.success=False
		self.writesettings=True
		try:
			i=open('settings.txt','r')
			Globals.settings=json.loads(i.read())
			i.close()
			self.writesettings=False
			self.USERNAME.Value=Globals.settings['USERNAME']
			self.SERVER.Value=Globals.settings['SERVER']
			self.DATABASE.Value=Globals.settings['DATABASE']
			self.writesettings=True
		except IOError:
			pass

	def __set_properties(self):
		self.SetTitle("Connect to Database")
		self.SetSize((250, 150))

	def __do_layout(self):
		sizer_1 = wx.BoxSizer(wx.VERTICAL)
		sizer_2_copy_2 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_2_copy_1 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_2_copy = wx.BoxSizer(wx.HORIZONTAL)
		sizer_2_copy_3 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_2.Add(self.label_1, 0, 0, 0)
		sizer_2.Add(self.SERVER, 1, wx.EXPAND, 0)
		sizer_1.Add(sizer_2, 0, wx.EXPAND, 0)
		sizer_2_copy.Add(self.label_2, 0, 0, 0)
		sizer_2_copy_3.Add(self.DATABASE, 1, wx.EXPAND, 0)
		sizer_2_copy.Add(sizer_2_copy_3, 1, wx.EXPAND, 0)
		sizer_1.Add(sizer_2_copy, 0, wx.EXPAND, 0)
		sizer_2_copy_1.Add(self.label_3, 0, 0, 0)
		sizer_2_copy_1.Add(self.USERNAME, 1, wx.EXPAND, 0)
		sizer_1.Add(sizer_2_copy_1, 0, wx.EXPAND, 0)
		sizer_2_copy_2.Add(self.label_4, 0, 0, 0)
		sizer_2_copy_2.Add(self.PASSWORD, 1, wx.EXPAND, 0)
		sizer_1.Add(sizer_2_copy_2, 0, wx.EXPAND, 0)
		sizer_1.Add(self.button_1, 0, 0, 0)
		self.SetSizer(sizer_1)
		self.Layout()
	
	def onClose(self,event=''):
		if self.success:
			self.Destroy()
		else:
			raise SystemExit

	def saveDatabase(self, event):
		if self.writesettings:
			Globals.password = self.PASSWORD.Value
			Globals.settings={'SERVER':self.SERVER.Value,'DATABASE':self.DATABASE.Value,'USERNAME':self.USERNAME.Value}
			o=open('settings.txt','w')
			o.write(json.dumps(Globals.settings))
			o.close()
		event.Skip()

	def onConnect(self, event):
		try:
			Globals.con = pyodbc.connect('DRIVER={SQL Server};SERVER=%s;DATABASE=%s;UID=%s;PWD=%s'%(Globals.settings['SERVER'],Globals.settings['DATABASE'],Globals.settings['USERNAME'],Globals.password))
			Globals.cur=Globals.con.cursor()
			self.success=True
			self.onClose()
		except pyodbc.Error:
			wx.MessageBox('Bad Connection','Connection Failed',wx.ICON_WARNING)
		event.Skip()


class Vendors(wx.Frame):
	def __init__(self, *args, **kwds):
		# begin wxGlade: Vendors.__init__
		kwds["style"] = wx.DEFAULT_FRAME_STYLE
		wx.Frame.__init__(self, *args, **kwds)
		self.label_1 = wx.StaticText(self, wx.ID_ANY, "Search Term")
		self.SEARCH = wx.TextCtrl(self, wx.ID_ANY, "", style=wx.TE_PROCESS_ENTER)
		self.button_2 = wx.Button(self, wx.ID_ANY, "Refresh Vendors")
		self.SEARCHBY = wx.RadioBox(self, wx.ID_ANY, "Search By", choices=["ID", "Name", "Address 1", "Address 2", "City", "State", "Zip", "Phone", "All"], majorDimension=9, style=wx.RA_SPECIFY_COLS)
		self.VIEWER = wx.grid.Grid(self, wx.ID_ANY, size=(1, 1))

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_TEXT_ENTER, self.activateSearch, self.SEARCH)
		self.Bind(wx.EVT_BUTTON, self.refreshVendors, self.button_2)
		# end wxGlade
		self.Bind(wx.EVT_CLOSE, self.onClose)
		dia = DatabaseConnection(None, -1, "",).ShowModal()
		self.firstsearch = True
		self.vendorlist = []
		#self.vendorlist = [[vendid,vendname,address1,address2,city,state,zip,phone],...]

	def __set_properties(self):
		# begin wxGlade: Vendors.__set_properties
		self.SetTitle("Vendor Search")
		self.SetSize((1171, 335))
		self.SetBackgroundColour(wx.Colour(240, 240, 240))
		self.SEARCHBY.SetSelection(8)
		self.VIEWER.CreateGrid(0, 8)
		self.VIEWER.SetRowLabelSize(0)
		self.VIEWER.SetColLabelValue(0, "Vendor ID")
		self.VIEWER.SetColLabelValue(1, "Vendor Name")
		self.VIEWER.SetColLabelValue(2, "Address 1")
		self.VIEWER.SetColLabelValue(3, "Address 2")
		self.VIEWER.SetColLabelValue(4, "City")
		self.VIEWER.SetColLabelValue(5, "State")
		self.VIEWER.SetColLabelValue(6, "Zip")
		self.VIEWER.SetColLabelValue(7, "Phone")
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: Vendors.__do_layout
		sizer_1 = wx.BoxSizer(wx.VERTICAL)
		sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
		sizer_3 = wx.BoxSizer(wx.VERTICAL)
		sizer_3.Add(self.label_1, 0, 0, 0)
		sizer_3.Add(self.SEARCH, 0, 0, 0)
		sizer_2.Add(sizer_3, 0, wx.EXPAND, 0)
		sizer_2.Add(self.button_2, 0, 0, 0)
		sizer_2.Add(self.SEARCHBY, 0, 0, 0)
		sizer_1.Add(sizer_2, 0, wx.EXPAND, 0)
		sizer_1.Add(self.VIEWER, 1, wx.EXPAND, 0)
		self.SetSizer(sizer_1)
		self.Layout()
		# end wxGlade

	def onClose(self,event = ''):
		raise SystemExit

	def activateSearch(self, event): # wxGlade: Vendors.<event_handler>
		for i in range(self.VIEWER.GetNumberRows()-1,-1,-1):
			self.VIEWER.DeleteRows()
		if self.firstsearch:
			self.vendorlist = []
			#lines = Main.issueSQLCommand("select vendid,name,addr1,addr2,city,state,zip,phone from vendor")
			lines = Globals.cur.execute("select vendid,name,addr1,addr2,city,state,zip,phone from vendor").fetchall()
			for i in lines:
				Id = i[0].strip()
				name = i[1].strip()
				add1 = i[2].strip()
				add2 = i[3].strip()
				city = i[4].strip()
				state = i[5].strip()
				Zip = i[6].strip()
				phone = i[7].strip()
				self.vendorlist.append([Id,name,add1,add2,city,state,Zip,phone])
			self.vendorlist = sorted(self.vendorlist)
			self.firstsearch = False
		if self.SEARCHBY.GetSelection() == 8:
			for i in self.vendorlist:
				found = False
				for a in i:
					if self.SEARCH.Value.lower() in a.lower():
						found = True
				if found:
					self.VIEWER.AppendRows()
					self.VIEWER.SetCellValue(self.VIEWER.GetNumberRows()-1,0,i[0])
					self.VIEWER.SetCellValue(self.VIEWER.GetNumberRows()-1,1,i[1])
					self.VIEWER.SetCellValue(self.VIEWER.GetNumberRows()-1,2,i[2])
					self.VIEWER.SetCellValue(self.VIEWER.GetNumberRows()-1,3,i[3])
					self.VIEWER.SetCellValue(self.VIEWER.GetNumberRows()-1,4,i[4])
					self.VIEWER.SetCellValue(self.VIEWER.GetNumberRows()-1,5,i[5])
					self.VIEWER.SetCellValue(self.VIEWER.GetNumberRows()-1,6,i[6])
					self.VIEWER.SetCellValue(self.VIEWER.GetNumberRows()-1,7,i[7])
		else:
			for i in self.vendorlist:
				if self.SEARCH.Value.lower() in i[self.SEARCHBY.GetSelection()].lower():
					self.VIEWER.AppendRows()
					self.VIEWER.SetCellValue(self.VIEWER.GetNumberRows()-1,0,i[0])
					self.VIEWER.SetCellValue(self.VIEWER.GetNumberRows()-1,1,i[1])
					self.VIEWER.SetCellValue(self.VIEWER.GetNumberRows()-1,2,i[2])
					self.VIEWER.SetCellValue(self.VIEWER.GetNumberRows()-1,3,i[3])
					self.VIEWER.SetCellValue(self.VIEWER.GetNumberRows()-1,4,i[4])
					self.VIEWER.SetCellValue(self.VIEWER.GetNumberRows()-1,5,i[5])
					self.VIEWER.SetCellValue(self.VIEWER.GetNumberRows()-1,6,i[6])
					self.VIEWER.SetCellValue(self.VIEWER.GetNumberRows()-1,7,i[7])
		self.VIEWER.AutoSizeColumns()
		self.SEARCH.Value = ''
		event.Skip()

	def refreshVendors(self, event): # wxGlade: Vendors.<event_handler>
		self.firstsearch = True
		event.Skip()

# end of class Vendors
if __name__ == "__main__":
	app = wx.PySimpleApp(0)
	wx.InitAllImageHandlers()
	Vendors = Vendors(None, wx.ID_ANY, "")
	app.SetTopWindow(Vendors)
	Vendors.Show()
	app.MainLoop()
